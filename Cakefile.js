// Generated by CoffeeScript 2.0.0-beta8-dev
void function () {
  var cache$, conf, Config, exec, spawn, util;
  cache$ = require('child_process');
  spawn = cache$.spawn;
  exec = cache$.exec;
  util = require('util');
  Config = require('./conf');
  conf = new Config;
  task('work', 'Start application server and open a browser', function () {
    return invoke('run');
  });
  task('run', 'Start application server', function () {
    var server;
    console.log('Starting application server\u2026');
    server = spawn('node', ['server']);
    server.stdout.setEncoding('utf8');
    server.stderr.setEncoding('utf8');
    server.stdout.on('data', function (data) {
      console.log('\t', data.replace('\n', ''));
      if (data.match('Express server listening'))
        return invoke('browse');
    });
    return server.stderr.on('data', function (data) {
      return util.print(data);
    });
  });
  task('watched', 'Start application server with autoreload', function () {
    var server;
    server = exec("supervisor -q -e 'node|js|coffee|json' -i 'undefined,public/app,public/bundle' server.js");
    server.stdout.setEncoding('utf8');
    server.stderr.setEncoding('utf8');
    server.stdout.on('data', function (data) {
      return console.log('\t', data.replace('\n', ''));
    });
    return server.stderr.on('data', function (data) {
      return util.print(data);
    });
  });
  task('heroku:deploy', 'Deploy the project to Heroku', function () {
    return exec('git push heroku master');
  });
  task('browse', 'Open web browser', function () {
    var url;
    conf = new Config;
    url = 'http://' + conf.hostname + ':' + conf.port + '/';
    console.log('Opening web browser at ' + url + '\u2026');
    return spawn('open', [url]);
  });
  task('console', 'Interactive console', function () {
    var models, mongoose;
    conf = new Config;
    mongoose = require('mongoose');
    mongoose.connect(conf.mongo);
    models = require('./models');
    return require('iced-coffee-script/lib/coffee-script/repl');
  });
  task('db:drop', 'Drops database', function (options) {
    var mongoose;
    mongoose = require('mongoose');
    return mongoose.connect(conf.mongo, function (err) {
      if (!err)
        return mongoose.connection.db.dropDatabase(function (dropErr) {
          if (!dropErr)
            return console.log('Database dropped');
        });
    });
  });
  task('db:seed', 'Seed database with fixtures', function (options) {
    var fixtures, models, mongoose, path;
    path = require('path');
    mongoose = require('mongoose');
    console.log('Connecting to', conf.mongo);
    mongoose.connect(conf.mongo);
    console.log('Loading schemas and modules\u2026');
    models = require('./models');
    fixtures = require('./lib/fixtures');
    return fixtures.load(__dirname + '/fixtures', function (err) {
      if (err)
        console.log('Cannot load fixtures. ' + err);
      return process.exit();
    });
  });
}.call(this);
